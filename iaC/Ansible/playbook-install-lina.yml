---  # Début du document YAML
- name: Télécharger et installer le paquet lina en fonction du système  # Titre du play
  hosts: all         # Cible tous les hôtes de l’inventaire (adapter au besoin)
  become: true       # Exécution avec privilèges (root)

  vars:
    deb_url: "https://master.lina.cefe.cnrs.fr/Agent/linux/amd64/setup.deb"   # URL du paquet .deb
    rpm_url: "https://master.lina.cefe.cnrs.fr/Agent/linux/amd64/setup.rpm"   # URL du paquet .rpm
    deb_filename: "/tmp/lina.deb"   # Chemin local temporaire de téléchargement (.deb)
    rpm_filename: "/tmp/lina.rpm"   # Chemin local temporaire de téléchargement (.rpm)
    skip_ssl_check: true # Ignorer les erreurs SSL (attention : diminue la sécurité)

  tasks:
    # Affiche la famille du système (Debian/RedHat, etc.) détectée par Ansible
    - name: Afficher la famille du système
      ansible.builtin.debug:
        msg: "Famille OS détectée : {{ ansible_os_family }}"

    # --- Debian Section ---
    # Met à jour l’index des paquets APT (équivalent: apt-get update)
    - name: Mettre à jour les dépôts APT (Debian)
      when: ansible_os_family == "Debian"   # Exécuté uniquement sur les systèmes de famille Debian
      ansible.builtin.apt:
        update_cache: yes

    # Installe les dépendances nécessaires sur Debian/Ubuntu
    - name: Installer les paquets requis (Debian)
      when: ansible_os_family == "Debian"
      ansible.builtin.apt:
        name:
          - libxss1
          - libxi6
        state: present

    # Télécharge le paquet .deb ; validate_certs est inversé par skip_ssl_check
    - name: Télécharger le .deb (Debian)
      when: ansible_os_family == "Debian"
      ansible.builtin.get_url:
        url: "{{ deb_url }}"               # Source du .deb
        dest: "{{ deb_filename }}"         # Destination locale
        mode: '0644'                       # Droits sur le fichier téléchargé
        validate_certs: "{{ not skip_ssl_check }}"  # false si skip_ssl_check=true

    # Vérifie l’existence du fichier .deb
    - name: Vérifier que le .deb existe
      when: ansible_os_family == "Debian"
      ansible.builtin.stat:
        path: "{{ deb_filename }}"
      register: deb_file_check             # Enregistre l’état du fichier (.stat.*)

    # Log de débogage : affiche les métadonnées du .deb téléchargé
    - name: Afficher le résultat du .deb
      when: ansible_os_family == "Debian"
      ansible.builtin.debug:
        var: deb_file_check.stat

    # Installation du .deb via dpkg (ne résout pas automatiquement les dépendances)
    - name: Installer le .deb
      when: ansible_os_family == "Debian"
      ansible.builtin.command: dpkg -i /tmp/lina.deb
      register: dpkg_result               # Capture le code retour/sortie de dpkg
      ignore_errors: yes                  # N’échoue pas le play si dpkg retourne une erreur (ex: deps manquantes)
      
    # Tentative de correction des dépendances après l’installation
    # NOTE: 'apt' avec name: -f n’exécute pas "apt-get -f install" ; ceci risque de ne pas faire l’effet attendu.
    # (Information seulement, on ne modifie pas le code.)
    - name: Corriger les dépendances après l'installation du .deb
      when:
        - ansible_os_family == "Debian"
        - dpkg_result is defined
        - dpkg_result.rc != 0             # On tente la correction uniquement si dpkg a échoué
      ansible.builtin.apt:
        name: -f                          # Intention: forcer l’installation des dépendances
        state: present
        update_cache: yes